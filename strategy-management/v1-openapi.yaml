openapi: 3.0.3
info:
  title: Strategy API
  version: 1.0.0
paths:
  /api/strategy-management/v1/strategies:
    get:
      tags:
        - Strategy Management
      summary: List all strategies
      description: Retrieve a list of all strategies, both system-defined and user-defined.
      parameters:
        - name: strategyType
          in: query
          required: false
          schema:
            type: string
          description: Filter by strategy type.
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [system, user]
          description: Filter by strategy type (system or user).
        - name: visibility
          in: query
          required: false
          schema:
            type: string
            enum: [private, public, restricted]
          description: Filter by visibility.
      responses:
        '200':
          description: A list of strategies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Strategy'
    post:
      tags:
        - Strategy Management
      summary: Create a new strategy
      description: Create a new custom strategy.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Strategy'
      responses:
        '201':
          description: Strategy created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Strategy'
  /api/strategy-management/v1/strategies/{strategyId}:
    get:
      tags:
        - Strategy Management
      summary: Get a strategy by ID
      description: Retrieve the details of a specific strategy.
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Strategy details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Strategy'
    put:
      tags:
        - Strategy Management
      summary: Update a strategy
      description: Update the details of an existing strategy.
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Strategy'
      responses:
        '200':
          description: Strategy updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Strategy'
    delete:
      tags:
        - Strategy Management
      summary: Delete a strategy
      description: Delete a specific strategy.
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Strategy deleted successfully
  /api/strategy-management/v1/strategy-types:
    get:
      tags:
        - Strategy Management
      summary: List all strategy types
      description: Retrieve a list of all strategy types.
      responses:
        '200':
          description: A list of strategy types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StrategyType'
    post:
      tags:
        - Strategy Management
      summary: Create a new strategy type
      description: Create a new strategy type.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyType'
      responses:
        '201':
          description: Strategy type created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyType'
  /api/strategy-management/v1/strategy-types/{strategyTypeId}:
    get:
      tags:
        - Strategy Management
      summary: Get a strategy type by ID
      description: Retrieve the details of a specific strategy type.
      parameters:
        - name: strategyTypeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Strategy type details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyType'
    put:
      tags:
        - Strategy Management
      summary: Update a strategy type
      description: Update the details of an existing strategy type.
      parameters:
        - name: strategyTypeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyType'
      responses:
        '200':
          description: Strategy type updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyType'
    delete:
      tags:
        - Strategy Management
      summary: Delete a strategy type
      description: Delete a specific strategy type.
      parameters:
        - name: strategyTypeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Strategy type deleted successfully
  /api/strategy-management/v1/strategy-parameters:
    get:
      tags:
        - Strategy Management
      summary: List all strategy parameters
      description: Retrieve a list of all strategy parameters.
      responses:
        '200':
          description: A list of strategy parameters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StrategyParameter'
    post:
      tags:
        - Strategy Management
      summary: Create a new strategy parameter
      description: Create a new strategy parameter.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyParameter'
      responses:
        '201':
          description: Strategy parameter created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyParameter'
  /api/strategy-management/v1/strategy-parameters/{parameterId}:
    get:
      tags:
        - Strategy Management
      summary: Get a strategy parameter by ID
      description: Retrieve the details of a specific strategy parameter.
      parameters:
        - name: parameterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Strategy parameter details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyParameter'
    put:
      tags:
        - Strategy Management
      summary: Update a strategy parameter
      description: Update the details of an existing strategy parameter.
      parameters:
        - name: parameterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyParameter'
      responses:
        '200':
          description: Strategy parameter updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyParameter'
    delete:
      tags:
        - Strategy Management
      summary: Delete a strategy parameter
      description: Delete a specific strategy parameter.
      parameters:
        - name: parameterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Strategy parameter deleted successfully
components:
  schemas:
    Strategy:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: "My Custom Strategy"
        description:
          type: string
          example: "A custom strategy designed for specific market conditions."
        strategyType:
          type: string
          description: "Type of the strategy, e.g., 'technical', 'fundamental', 'quantitative'."
        type:
          type: string
          enum: [system, user]
        visibility:
          type: string
          enum: [private, public, restricted]
        ownerId:
          type: string
          format: uuid
          nullable: true
          description: "ID of the user who created the strategy. Null for system-defined strategies."
        allowedUsers:
          type: array
          items:
            type: string
            format: uuid
          description: "List of user IDs who can access the strategy. Used for restricted strategies."
        tags:
          type: array
          items:
            type: string
          description: "List of tags associated with the strategy."
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/StrategyParameter'
        createdAt:
          type: string
          format: date-time
          description: "When the strategy was created."
        updatedAt:
          type: string
          format: date-time
          description: "When the strategy was last updated."
        isDeleted:
          type: boolean
          description: "Boolean field indicating if the strategy is deleted or not."
        status:
          type: string
          enum: [ACTIVE, INACTIVE, DELETED]
    StrategyType:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        isDeleted:
          type: boolean
        status:
          type: string
          enum: [ACTIVE, INACTIVE, DELETED]
    StrategyParameter:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: "Name of the parameter."
        type:
          type: string
          description: "Type of the parameter, e.g., 'technical', 'fundamental'."
        allowedValues:
          type: array
          items:
            type: string
          description: "List of allowed values for the parameter."
        isMultiSelect:
          type: boolean
          description: "Boolean value indicating if multiple values can be selected for the parameter."
        createdAt:
          type: string
          format: date-time
          description: "When the parameter was created."
        updatedAt:
          type: string
          format: date-time
          description: "When the parameter was last updated."
        isDeleted:
          type: boolean
          description: "Boolean field indicating if the parameter is deleted or not."
        status:
          type: string
          enum: [ACTIVE, INACTIVE, DELETED]
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          minLength: 8
          maxLength: 8
        message:
          type: string
          minLength: 3
          maxLength: 1000
        debugId:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
