openapi: 3.0.3
info:
  title: Strategy Management API
  version: 1.0.0
paths:
  /api/strategy-management/v1/strategies:
    get:
      tags:
        - Strategy Management
      summary: List strategies
      description: Retrieve a list of strategies.
      responses:
        '200':
          description: A list of strategies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Strategy'
    post:
      tags:
        - Strategy Management
      summary: Create a strategy
      description: Create a new strategy.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Strategy'
      responses:
        '201':
          description: Strategy created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Strategy'
  /api/strategy-management/v1/strategies/{strategyId}:
    get:
      tags:
        - Strategy Management
      summary: Get strategy details
      description: Retrieve the details of a specific strategy.
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Strategy details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Strategy'
    put:
      tags:
        - Strategy Management
      summary: Update a strategy
      description: Update an existing strategy.
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Strategy'
      responses:
        '200':
          description: Strategy updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Strategy'
    delete:
      tags:
        - Strategy Management
      summary: Delete a strategy
      description: Delete a specific strategy.
      parameters:
        - name: strategyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Strategy deleted successfully
  /api/strategy-management/v1/strategy-parameters:
    get:
      tags:
        - Strategy Management
      summary: List strategy parameters
      description: Retrieve a list of strategy parameters.
      responses:
        '200':
          description: A list of strategy parameters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StrategyParameter'
    post:
      tags:
        - Strategy Management
      summary: Create a strategy parameter
      description: Create a new strategy parameter.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyParameter'
      responses:
        '201':
          description: Strategy parameter created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyParameter'
  /api/strategy-management/v1/strategy-parameters/{parameterId}:
    get:
      tags:
        - Strategy Management
      summary: Get strategy parameter details
      description: Retrieve the details of a specific strategy parameter.
      parameters:
        - name: parameterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Strategy parameter details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyParameter'
    put:
      tags:
        - Strategy Management
      summary: Update a strategy parameter
      description: Update an existing strategy parameter.
      parameters:
        - name: parameterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyParameter'
      responses:
        '200':
          description: Strategy parameter updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyParameter'
    delete:
      tags:
        - Strategy Management
      summary: Delete a strategy parameter
      description: Delete a specific strategy parameter.
      parameters:
        - name: parameterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Strategy parameter deleted successfully
components:
  schemas:
    Strategy:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        type:
          type: string
        tags:
          type: array
          items:
            type: string
        parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        isDeleted:
          type: boolean
        status:
          type: string
          enum: [ACTIVE, INACTIVE, DELETED]
    StrategyParameter:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
        allowedValues:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
              displayText:
                type: string
              displayOrder:
                type: integer
        isMultiSelect:
          type: boolean
        isRequired:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        isDeleted:
          type: boolean
        status:
          type: string
          enum: [ACTIVE, INACTIVE, DELETED]
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          minLength: 8
          maxLength: 8
        message:
          type: string
          minLength: 3
          maxLength: 1000
        debugId:
          type: string
          format: uuid
          minLength: 36
          maxLength: 36
