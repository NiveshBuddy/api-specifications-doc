openapi: 3.0.3
info:
  title: User Management API
  version: 1.0.0
paths:
  /api/user-management/v1/auth-user:
    get:
      tags:
        - User Management
      summary: Get details of the authenticated user
      description: Retrieves the details of the currently authenticated user, including their subscription information.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithSubscription'
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier
          format: uuid
          example: "018a1b1e-1c4b-4f2b-9d5e-8d1c2c15b6a2"
        countryCode:
          type: string
          description: 2 letter ISO code of the country
          example: "US"
        name:
          type: string
          description: Full name of the user
          minLength: 3
          maxLength: 50
          example: "John Doe"
        email:
          type: string
          description: Email address of the user
          minLength: 5
          maxLength: 200
          pattern: "^[\\w\\.-]+@[\\w\\.-]+\\.[a-zA-Z]{2,}$"
          example: "john.doe@example.com"
        createdAt:
          type: string
          description: When the user was created
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updatedAt:
          type: string
          description: When the user was updated
          format: date-time
          example: "2024-01-02T00:00:00Z"
        isDeleted:
          type: boolean
          description: Indicates if the user is deleted
          example: false
        status:
          type: string
          description: Status of the user
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
          example: "ACTIVE"
      required:
        - id
        - countryCode
        - name
        - email
        - createdAt
        - updatedAt
        - isDeleted
        - status
    SubscriptionPlan:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier
          format: uuid
          example: "018a1b1e-1c4b-4f2b-9d5e-8d1c2c15b6a2"
        subscription_type_id:
          type: string
          description: Subscription type identifier
          format: uuid
          example: "018a1b1e-1c4b-4f2b-9d5e-8d1c2c15b6b3"
        name:
          type: string
          description: Name of the subscription plan
          example: "Premium Plan"
        totalCredits:
          type: integer
          description: Total credits for back testing
          minimum: 0
          maximum: 1000000
          example: 1000
        availableCredits:
          type: integer
          description: Available credits for back testing
          minimum: 0
          maximum: 1000000
          example: 800
        dataAvailableYears:
          type: integer
          description: Data available in years
          minimum: 0
          maximum: 20
          example: 5
        subscriptionStartDate:
          type: string
          description: Subscription start date
          format: date-time
          example: "2024-01-01T00:00:00Z"
        subscriptionEndDate:
          type: string
          description: Subscription end date
          format: date-time
          example: "2024-12-31T23:59:59Z"
        createdAt:
          type: string
          description: When the subscription was created
          format: date-time
          example: "2024-01-01T00:00:00Z"
        updatedAt:
          type: string
          description: When the subscription was updated
          format: date-time
          example: "2024-01-02T00:00:00Z"
        isDeleted:
          type: boolean
          description: Indicates if the subscription is deleted
          example: false
        status:
          type: string
          description: Status of the subscription
          enum:
            - ACTIVE
            - INACTIVE
            - EXPIRED
            - CANCELLED
            - DELETED
          example: "ACTIVE"
      required:
        - id
        - subscription_type_id
        - name
        - totalCredits
        - availableCredits
        - dataAvailableYears
        - subscriptionStartDate
        - subscriptionEndDate
        - createdAt
        - updatedAt
        - isDeleted
        - status
    UserWithSubscription:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        subscription:
          $ref: '#/components/schemas/SubscriptionPlan'
      required:
        - user
        - subscription
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Error code
          minLength: 8
          maxLength: 8
          example: "40100001"
        message:
          type: string
          description: Error message
          minLength: 3
          maxLength: 1000
          example: "Unauthorized"
        debugId:
          type: string
          description: Debug identifier for tracing the error
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
      required:
        - code
        - message
        - debugId
